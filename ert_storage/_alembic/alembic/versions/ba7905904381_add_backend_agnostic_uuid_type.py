"""Add backend agnostic UUID type

Revision ID: ba7905904381
Revises: 1a4a83dfb895
Create Date: 2021-04-14 16:54:52.038776

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects.postgresql import UUID


# revision identifiers, used by Alembic.
revision = "ba7905904381"
down_revision = "1a4a83dfb895"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###

    # experiment
    op.alter_column("experiment", "id", new_column_name="pk")
    op.add_column("experiment", sa.Column("id", UUID(), unique=True, nullable=False))

    # ensemble
    op.alter_column("ensemble", "id", new_column_name="pk")
    op.add_column("ensemble", sa.Column("id", UUID(), unique=True, nullable=False))
    op.alter_column(
        "ensemble",
        "experiment_id",
        new_column_name="experiment_pk",
    )

    # f64_matrix
    op.alter_column("f64_matrix", "id", new_column_name="pk")
    op.add_column("f64_matrix", sa.Column("id", UUID(), unique=True, nullable=False))

    # file
    op.alter_column("file", "id", new_column_name="pk")
    op.add_column("file", sa.Column("id", UUID(), unique=True, nullable=False))

    # file_block
    op.alter_column("file_block", "id", new_column_name="pk")
    op.add_column("file_block", sa.Column("id", UUID(), unique=True, nullable=False))
    op.alter_column(
        "file_block",
        "ensemble_id",
        new_column_name="ensemble_pk",
    )

    # observation
    op.alter_column("observation", "id", new_column_name="pk")
    op.add_column("observation", sa.Column("id", UUID(), unique=True, nullable=False))
    op.alter_column(
        "observation",
        "experiment_id",
        new_column_name="experiment_pk",
    )

    # observation_record_assiociation
    op.alter_column(
        "observation_record_association",
        "observation_id",
        new_column_name="observation_pk",
    )
    op.alter_column(
        "observation_record_association", "record_id", new_column_name="record_pk"
    )

    # observation_transformation
    op.alter_column(
        "observation_transformation",
        "id",
        new_column_name="pk",
    )
    op.add_column(
        "observation_transformation",
        sa.Column("id", UUID(), unique=True, nullable=False),
    )
    op.alter_column(
        "observation_transformation",
        "observation_id",
        new_column_name="observation_pk",
    )
    op.alter_column(
        "observation_transformation",
        "update_id",
        new_column_name="update_pk",
    )

    # record
    op.alter_column(
        "record",
        "id",
        new_column_name="pk",
    )
    op.add_column("record", sa.Column("id", UUID(), unique=True, nullable=False))
    op.alter_column(
        "record",
        "f64_matrix_id",
        new_column_name="f64_matrix_pk",
    )
    op.alter_column(
        "record",
        "file_id",
        new_column_name="file_pk",
    )
    op.alter_column(
        "record",
        "ensemble_id",
        new_column_name="ensemble_pk",
    )

    # update
    op.alter_column(
        "update",
        "id",
        new_column_name="pk",
    )
    op.add_column("update", sa.Column("id", UUID(), unique=True, nullable=False))
    op.alter_column(
        "update",
        "ensemble_reference_id",
        new_column_name="ensemble_reference_pk",
    )
    op.alter_column(
        "update",
        "ensemble_result_id",
        new_column_name="ensemble_result_pk",
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###

    # update
    op.drop_column("update", "id")
    op.alter_column(
        "update",
        "pk",
        new_column_name="id",
    )
    op.alter_column(
        "update",
        "ensemble_reference_pk",
        new_column_name="ensemble_reference_id",
    )
    op.alter_column(
        "update",
        "ensemble_result_pk",
        new_column_name="ensemble_result_id",
    )

    # record
    op.drop_column("record", "id")
    op.alter_column(
        "record",
        "pk",
        new_column_name="id",
    )
    op.alter_column(
        "record",
        "f64_matrix_pk",
        new_column_name="f64_matrix_id",
    )
    op.alter_column(
        "record",
        "file_pk",
        new_column_name="file_id",
    )
    op.alter_column(
        "record",
        "ensemble_pk",
        new_column_name="ensemble_id",
    )

    # observation_transformation
    op.drop_column("observation_transformation", "id")
    op.alter_column(
        "observation_transformation",
        "pk",
        new_column_name="id",
    )
    op.alter_column(
        "observation_transformation",
        "observation_pk",
        new_column_name="observation_id",
    )
    op.alter_column(
        "observation_transformation",
        "update_pk",
        new_column_name="update_id",
    )

    # observation_record_association
    op.alter_column(
        "observation_record_association",
        "observation_pk",
        new_column_name="observation_id",
    )
    op.alter_column(
        "observation_record_association", "record_pk", new_column_name="record_id"
    )

    # observation
    op.drop_column("observation", "id")
    op.alter_column("observation", "pk", new_column_name="id")
    op.alter_column(
        "observation",
        "experiment_pk",
        new_column_name="experiment_id",
    )

    # file_block
    op.drop_column("file_block", "id")
    op.alter_column("file_block", "pk", new_column_name="id")
    op.alter_column(
        "file_block",
        "ensemble_pk",
        new_column_name="ensemble_id",
    )

    # file
    op.drop_column("file", "id")
    op.alter_column("file", "pk", new_column_name="id")

    # f64_matrix
    op.drop_column("f64_matrix", "id")
    op.alter_column("f64_matrix", "pk", new_column_name="id")

    # ensemble
    op.drop_column("ensemble", "id")
    op.alter_column("ensemble", "pk", new_column_name="id")
    op.alter_column(
        "ensemble",
        "experiment_pk",
        new_column_name="experiment_id",
    )
    # experiment
    op.drop_column("experiment", "id")
    op.alter_column("experiment", "pk", new_column_name="id")
    # ### end Alembic commands ###
