"""Add RecordInfo

Revision ID: 021d7514e351
Revises: 7812741cc469
Create Date: 2021-05-18 10:09:39.833270

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "021d7514e351"
down_revision = "7812741cc469"
branch_labels = None
depends_on = None


def upgrade():
    op.execute("ALTER TYPE recordtype RENAME VALUE 'float_vector' TO 'f64_matrix'")
    op.drop_column("record", "record_class")
    op.execute("DROP TYPE recordclass")
    recordtype_postgres = postgresql.ENUM(
        "f64_matrix", "file", name="recordtype", create_type=False
    )
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "record_info",
        sa.Column("pk", sa.Integer(), nullable=False),
        sa.Column(
            "time_created",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column(
            "time_updated",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("ensemble_pk", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column(
            "record_type",
            recordtype_postgres,
            nullable=False,
        ),
        sa.Column(
            "record_class",
            sa.Enum("parameter", "response", "other", name="recordclass"),
            nullable=False,
        ),
        sa.Column("prior_pk", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["ensemble_pk"],
            ["ensemble.pk"],
        ),
        sa.ForeignKeyConstraint(
            ["prior_pk"],
            ["prior.pk"],
        ),
        sa.PrimaryKeyConstraint("pk"),
        sa.UniqueConstraint("name", "ensemble_pk"),
    )
    op.add_column(
        "ensemble", sa.Column("parameter_names", sa.ARRAY(sa.String()), nullable=False)
    )
    op.add_column(
        "ensemble", sa.Column("response_names", sa.ARRAY(sa.String()), nullable=False)
    )
    op.drop_column("ensemble", "inputs")
    op.add_column("record", sa.Column("record_info_pk", sa.Integer(), nullable=True))
    op.drop_constraint("record_prior_pk_fkey", "record", type_="foreignkey")
    op.drop_constraint("record_ensemble_id_fkey", "record", type_="foreignkey")
    op.create_foreign_key(None, "record", "record_info", ["record_info_pk"], ["pk"])
    op.drop_column("record", "ensemble_pk")
    op.drop_column("record", "prior_pk")
    op.drop_column("record", "record_type")
    op.drop_column("record", "name")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "record", sa.Column("name", sa.VARCHAR(), autoincrement=False, nullable=False)
    )
    op.add_column(
        "record",
        sa.Column(
            "record_class",
            postgresql.ENUM("parameter", "response", "other", name="recordclass"),
            autoincrement=False,
            nullable=True,
        ),
    )
    op.add_column(
        "record",
        sa.Column("record_type", sa.INTEGER(), autoincrement=False, nullable=False),
    )
    op.add_column(
        "record",
        sa.Column("prior_pk", sa.INTEGER(), autoincrement=False, nullable=True),
    )
    op.add_column(
        "record",
        sa.Column("ensemble_pk", sa.INTEGER(), autoincrement=False, nullable=True),
    )
    op.drop_constraint(None, "record", type_="foreignkey")
    op.create_foreign_key(
        "record_ensemble_id_fkey", "record", "ensemble", ["ensemble_pk"], ["pk"]
    )
    op.create_foreign_key(
        "record_prior_pk_fkey", "record", "prior", ["prior_pk"], ["pk"]
    )
    op.drop_column("record", "record_info_pk")
    op.add_column(
        "ensemble",
        sa.Column(
            "inputs", postgresql.ARRAY(sa.VARCHAR()), autoincrement=False, nullable=True
        ),
    )
    op.drop_column("ensemble", "response_names")
    op.drop_column("ensemble", "parameter_names")
    op.drop_table("record_info")
    # ### end Alembic commands ###
